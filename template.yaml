AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Serverless S3 Uploader - upload files to S3 buckets from your web applications using pre-signed URLs.

Globals:
  Api:
    EndpointConfiguration: EDGE
    Cors:
      AllowMethods: "'OPTIONS,GET,POST'"
      AllowHeaders: "'Content-Type,Authorization'"
      AllowOrigin: "'*'"
  Function:
    Timeout: 10  # Increased from 5s to 10s

Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - GET
              - PUT
              - POST
              - DELETE
              - HEAD
            AllowedOrigins:
              - "*"

  S3UploaderFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3UploaderFunction/
      Handler: app.handler
      Runtime: nodejs18.x  # Updated from nodejs12.x
      MemorySize: 256  # Increased from 128MB
      Environment:
        Variables:
          UploadBucket: !Ref S3Bucket
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref S3Bucket
      Role: !GetAtt S3UploaderFunctionRole.Arn
      Events:
        HttpPost:
          Type: Api
          Properties:
            Path: '/'
            Method: get  # Kept 'get' unchanged

  S3UploaderFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: LambdaS3Access
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:DeleteObject
                  - s3:ListBucket
                Resource: 
                  - !Sub "arn:aws:s3:::${S3Bucket}/*"
                  - !Sub "arn:aws:s3:::${S3Bucket}"

Outputs:
  S3UploaderFunction:
    Description: "Lambda Function ARN"
    Value: !GetAtt S3UploaderFunction.Arn
  S3UploaderFunctionIamRole:
    Description: "IAM Role created for function"
    Value: !GetAtt S3UploaderFunctionRole.Arn
  S3BucketName:
    Description: S3 bucket
    Value: !Ref S3Bucket
